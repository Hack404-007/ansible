user nginx;
worker_processes {{ ansible_processor_cores }};

pid logs/nginx.pid;
worker_rlimit_nofile 51200;

events {
        use epoll;
        worker_connections 51200;
        }

http {
        include mime.types;
        default_type application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$request_time" "$host"';


        server_names_hash_bucket_size 128;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 50m;
        sendfile on;
        tcp_nopush on;
        keepalive_timeout 120;
        server_tokens off;
        tcp_nodelay on;

        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 128k;

#Gzip Compression
        gzip on;
        gzip_buffers 16 8k;
        gzip_comp_level 6;
        gzip_http_version 1.1;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_vary on;
        gzip_types
            text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
            text/javascript application/javascript application/x-javascript
            text/x-json application/json application/x-web-app-manifest+json
            text/css text/plain text/x-component
            font/opentype application/x-font-ttf application/vnd.ms-fontobject
            image/x-icon;
        gzip_disable  "msie6";

#If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;

server {
        listen 80;
        server_name __;
	index index.html index.htm index.php;
	root /opt/vboss/webdata;
        access_log /usr/local/nginx/logs/access_nginx.log combined;
        if ( $query_string ~* ".*[\;'\<\>].*" ){
                return 404;
                }
	location ~^(.+\.php)(.*)$ {
        fastcgi_index   index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
	fastcgi_pass unix:/dev/shm/php-cgi.sock;
        fastcgi_param   SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        fastcgi_param   PATH_INFO      $fastcgi_path_info;
        fastcgi_param   PATH_TRANSLATED   $document_root$fastcgi_path_info;
        include   fastcgi_params;
	}


	
	location /vboss {
                root    /opt/vboss/webdata;
		index index.html index.htm index.php;		
	        location ~^(.+\.php)(.*)$ {
                fastcgi_split_path_info ^(.+\.php)(.*)$;
                fastcgi_pass unix:/dev/shm/php-cgi.sock;
                fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
                fastcgi_index index.php;
                include fastcgi.conf;
                }
	}
	location /vboss_test  {

	        root    /opt/vboss/webdata;
                index index.html index.htm index.php;
                location ~^(.+\.php)(.*)$ {
                fastcgi_split_path_info ^(.+\.php)(.*)$;
                fastcgi_pass unix:/dev/shm/php-cgi.sock;
                fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
                fastcgi_index index.php;
                include fastcgi.conf;
                }

	}

        location ~^(.+\.php)(.*)$ {
		root	/opt/vboss/webdata;
		fastcgi_split_path_info ^(.+\.php)(.*)$;
                fastcgi_pass unix:/dev/shm/php-cgi.sock;
		fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
                fastcgi_index index.php;
                include fastcgi.conf;
                }

	location /customer 
	{
		root    /opt/vboss/webdata;
                #fastcgi_pass remote_php_ip:9000;
                fastcgi_pass unix:/dev/shm/php-cgi.sock;
                fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
                fastcgi_index index.php;
                include fastcgi.conf;
	}

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|ico)$ {
                expires 30d;
                }

        location ~ .*\.(js|css)?$ {
                expires 7d;
                }
}
}
