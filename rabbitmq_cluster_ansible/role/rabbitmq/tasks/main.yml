---
- name: Install ntpdate
  yum: name=ntp state=present
- name: Time sync
  command: ntpdate ntp1.aliyun.com
- name: Add Hosts File
  shell: echo '{{ host1_node }}' >> /etc/hosts && echo "{{ host2_node }}" >> /etc/hosts
- name: Copy erlang rpm
  copy: src=erlang-17.4-1.el6.x86_64.rpm dest=/tmp owner=root group=root mode=0644
- name: Rpm install erlang
  yum: name=/tmp/erlang-17.4-1.el6.x86_64.rpm state=present
- name: Copy rabbitmq-server
  copy: src=rabbitmq-server-3.6.1-1.noarch.rpm dest=/tmp owner=root group=root mode=0644
- name: Install rabbitmq-server
  yum: name=/tmp/rabbitmq-server-3.6.1-1.noarch.rpm state=present
- name: mkdir -pv rabbitmq.conf
  file: path="{{item}}" state=directory owner=rabbitmq group=rabbitmq
  with_items:
   - "/etc/rabbitmq"
   - "/var/lib/rabbitmq"
- name: Create .erlang cookie
  shell: echo "{{ default_user_pwd }}" > /var/lib/rabbitmq/.erlang.cookie
- name: Change .erlang cookie file attribute
  file: path=/var/lib/rabbitmq/.erlang.cookie owner=rabbitmq group=rabbitmq mode=0400
- name: Copy rabbitmq.conf
  template: src=rabbitmq.config.j2 dest=/etc/rabbitmq/rabbitmq.config  owner=rabbitmq group=rabbitmq mode=0644
- name: Stop rabbitmq
  shell: rabbitmqctl stop ;ps -ef |grep rabbitmq | grep -v grep | awk '{print $2}' | xargs kill -9
- name: Rabbitmq-server detached
  shell: rabbitmq-server -detached
- name: Start rabbitmq
  service: name=rabbitmq-server enabled=yes state=restarted
- name: Rabbitmq status
  shell: rabbitmqctl cluster_status
  register: result
- debug: msg='{{result.stdout}}'
- name: Rabbitmq join_cluster
  #  shell: rabbitmqctl  stop_app && rabbitmqctl  join_cluster rabbit@node1 && rabbitmqctl  start_app
  shell: rabbitmqctl  stop_app && rabbitmqctl  join_cluster rabbit@{{ master_node }} && rabbitmqctl  start_app
  when: cluster_role == "secondary"
- name: Enabled HTTP management
  shell: rabbitmq-plugins enable rabbitmq_management
- name: Add user for default admin
  shell: rabbitmqctl set_user_tags {{ default_user }} administrator
- name: msg cluster_status
  shell: rabbitmqctl  cluster_status
  register: cluster_status
- debug: msg='{{ cluster_status.stdout }}'
